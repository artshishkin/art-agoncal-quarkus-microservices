plugins {
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "3.0.0"
}

version = "0.1"
group = "net.shyshkin.study.micronaut"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("net.shyshkin.study.micronaut.*")
    }
}

tasks.withType(JavaCompile){
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=redoc.enabled=true,rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

tasks.named("dockerfile") {
    args("-Xmx128m")
    instruction """ENV MICRONAUT_SERVER_PORT=8080 """
}

tasks.named("dockerBuild") {
    images = ["artarkatesoft/mn-rest-number:jvm-$project.version"]
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

}


application {
    mainClass.set("net.shyshkin.study.micronaut.number.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

